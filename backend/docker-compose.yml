version: '3.9'

services:
  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER: unical
      POSTGRES_PASSWORD: unical
      POSTGRES_DB: musicstore
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  auth-service:
    build: ./auth-service
    ports:
      - "4001:4001"
    volumes:
      - ./auth-service:/app
    environment:
      - DATABASE_URL=postgresql://unical:unical@postgres:5432/musicstore?schema=public
    depends_on:
      - postgres
    command: sh -c "npx prisma generate && npx prisma db push && node index.js"

  records-service:
    build: ./records-service
    ports:
      - "4002:4002"
    volumes:
      - ./records-service:/app
    environment:
      - DATABASE_URL=postgresql://unical:unical@postgres:5432/musicstore?schema=public
    depends_on:
      - postgres
    command: sh -c "npx prisma generate && node index.js"

  ensembles-service:
    build: ./ensembles-service
    ports:
      - "4003:4003"
    volumes:
      - ./ensembles-service:/app
    environment:
      - DATABASE_URL=postgresql://unical:unical@postgres:5432/musicstore?schema=public
    depends_on:
      - postgres
    command: sh -c "npx prisma generate && node index.js"

  compositions-service:
    build: ./compositions-service
    ports:
      - "4004:4004"
    volumes:
      - ./compositions-service:/app
    environment:
      - DATABASE_URL=postgresql://unical:unical@postgres:5432/musicstore?schema=public
    depends_on:
      - postgres
      - redis
    command: sh -c "npx prisma generate && node index.js"

  top-service:
    build: ./top-service
    ports:
      - "4005:4005"
    volumes:
      - ./top-service:/app
    environment:
      - DATABASE_URL=postgresql://unical:unical@postgres:5432/musicstore?schema=public
    depends_on:
      - postgres
    command: sh -c "npx prisma generate && node index.js"


  admin-service:
    build: ./admin-service
    ports:
      - "4006:4006"
    volumes:
      - ./admin-service:/app
    environment:
      - DATABASE_URL=postgresql://unical:unical@postgres:5432/musicstore?schema=public
    depends_on:
      - postgres
    command: sh -c "npx prisma generate && npx prisma db push && node index.js"
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"     # AMQP (основной протокол)
      - "15672:15672"   # веб-интерфейс RabbitMQ
    restart: unless-stopped

  records-worker:
    build:
      context: ./records-service
    volumes:
      - ./records-service:/app
    command: sh -c "node worker.js"
    depends_on:
      - rabbitmq
      - records-service
    restart: always
    environment:
      - DATABASE_URL="postgresql://unical:610999@localhost:5432/musicstore?schema=public"
  redis:
    image: redis:7
    restart: unless-stopped
    ports:
      - "6379:6379"
  
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    ports:
      - "3003:3000"
    depends_on:
      - prometheus
    volumes:
      - grafana-data:/var/lib/grafana

volumes:
  pgdata:
  grafana-data: